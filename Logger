#set the root logger level and its appenders
rootLogger.level=debug
rootLogger.appenderRefs=console,FILE
rootLogger.appenderRef.console.ref=Console
rootLogger.appenderRef.file.ref=File

#Console Appender configuration
appender.console.type=Console
appender.console.name=Console
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L-%m%n

#File Appender configuration
appender.file.type=File
appender.file.name=File
appender.file.filename=${sys:user.dir}/logs/test${date:yyyyMMdd_HHmmss}.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{2}:%L-%m%n





package runner;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.openqa.selenium.remote.DesiredCapabilities;
import utils.EventHandler;

public class TestAmazon {
	public static WebDriver driver;
	public static int IMPLICIT_WAIT_TIME =10;
	public static int  PAGE_LOAD_TIME =15;

	Logger log=LogManager.getLogger(TestAmazon.class);
	
 @BeforeMethod
	public void openBrowser() throws Throwable {
		DesiredCapabilities dc = new DesiredCapabilities();
		dc.setBrowserName("chrome");
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        //get url
        WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
        driver.get("https://www.google.com/");
    }
	@Test
	public void testAmazon(){
        log.info("Test1 Started");
		
		try {
			driver.findElement(By.name("q")).sendKeys("Selinium",Keys.ENTER);
		    log.info("Searching data in google...");
		} catch (Exception e) {
			log.error("Searching not done in google..."+e.getMessage());
		}

		try {
			driver.navigate().back();
			log.info("navigate back");
		} catch (Exception e) {
			log.error("not vavigating back to homepage...");
		}

	}
}
